presets:
- labels:
    preset-k8s-ssh: "true"
  env:
  - name: USER
    value: prow
  - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
    value: /etc/ssh-key-secret/ssh-private
  - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
    value: /etc/ssh-key-secret/ssh-public
  volumes:
  - name: ssh
    secret:
      defaultMode: 0400
      # TODO: see if we can use OS login instead of this
      #   corresponds to a manually created ssh key
      #   added to project-wide ssh-keys for e2e projects during project creation
      #   on kubernetes-public/prow-build-test
      secretName: ssh-key-secret
  volumeMounts:
  - name: ssh
    mountPath: /etc/ssh-key-secret
    readOnly: true
- labels:
    preset-service-account: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  # storage e2e tests borrow this as a preconfigured key instead of creating and
  # injecting a new key. this allows us to avoid mass key download warnings
  - name: E2E_GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  - name: GOOGLE_APPLICATION_CREDENTIALS_DEPRECATED
    value: "Migrate to workload identity, contact sig-testing"
  volumes:
  - name: service
    secret:
      # prow-build-test@kubernetes-public.iam.gserviceaccount.com on kubernetes-public/prow-build-test
      secretName: service-account
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true
# docker-in-docker (with images/bootstrap) preset
# NOTE: using this also requires using that image,
# ensuring you run your test under either the ENTRYPOINT or:
# /usr/local/bin/runner.sh my-test-command --foo --bar
# AND setting the following on your PodSpec:
# securityContext:
#   privileged: true
- labels:
    preset-dind-enabled: "true"
  env:
  - name: DOCKER_IN_DOCKER_ENABLED
    value: "true"
  volumes:
  # kubekins-e2e legacy path
  - name: docker-graph
    emptyDir: {}
  # krte (normal) path
  - name: docker-root
    emptyDir: {}
  volumeMounts:
  - name: docker-graph
    mountPath: /docker-graph
  - name: docker-root
    mountPath: /var/lib/docker
# storage / caching presets
- labels:
    preset-bazel-scratch-dir: "true"
  env:
  - name: TEST_TMPDIR
    value: /bazel-scratch/.cache/bazel
  volumes:
  - name: bazel-scratch
    emptyDir: {}
  volumeMounts:
  - name: bazel-scratch
    mountPath: /bazel-scratch/.cache
# volume mounts for kind
- labels:
    preset-kind-volume-mounts: "true"
  volumeMounts:
    - mountPath: /lib/modules
      name: modules
      readOnly: true
    - mountPath: /sys/fs/cgroup
      name: cgroup
  volumes:
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory

periodics:
- interval: 1h
  name: ci-kubernetes-kind-e2e-parallel-test
  cluster: k8s-infra-prow-build
  annotations:
    testgrid-dashboards: sig-release-master-blocking, sig-testing-kind
    testgrid-tab-name: kind-master-parallel
    description: Uses kubetest to run e2e tests against a latest kubernetes master cluster created with sigs.k8s.io/kind
    testgrid-alert-email: bentheelder@google.com,antonio.ojea.garcia@gmail.com,kubernetes-release-team@googlegroups.com
    testgrid-num-columns-recent: '6'
    fork-per-release: "true"
    fork-per-release-periodic-interval: 1h 2h 6h 24h
  labels:
    preset-bazel-scratch-dir: "true"
    # preset-bazel-remote-cache-enabled: "true"
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  decorate: true
  decoration_config:
    timeout: 60m
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/krte:v20200430-04773e2-master
      command:
      - wrapper.sh
      - bash
      - -c
      - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
      env:
      - name: FOCUS
        value: "."
      # TODO(bentheelder): reduce the skip list further
      - name: SKIP
        value: \[Slow\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|PodSecurityPolicy|LoadBalancer|load.balancer|In-tree.Volumes.\[Driver:.nfs\]|PersistentVolumes.NFS|Network.should.set.TCP.CLOSE_WAIT.timeout|Simple.pod.should.support.exec.through.an.HTTP.proxy|subPath.should.support.existing|should.provide.basic.identity|\[NodeFeature:PodReadinessGate\]
      - name: PARALLEL
        value: "true"
      - name: BUILD_TYPE
        value: bazel
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        requests:
          # these are both a bit below peak usage during build
          # this is mostly for building kubernetes
          memory: "9000Mi"
          # during the tests more like 3-20m is used
          cpu: 2000m
- interval: 1h
  name: ci-kubernetes-kind-ipv6-e2e-parallel-test
  cluster: k8s-infra-prow-build
  annotations:
    testgrid-dashboards: sig-release-master-blocking, sig-testing-kind
    testgrid-tab-name: kind-ipv6-master-parallel
    description: Uses kubetest to run e2e tests against a latest kubernetes master IPv6 cluster created with sigs.k8s.io/kind
    testgrid-alert-email: bentheelder@google.com,antonio.ojea.garcia@gmail.com,kubernetes-release-team@googlegroups.com
    testgrid-num-columns-recent: '6'
    fork-per-release: "true"
    fork-per-release-periodic-interval: 1h 2h 6h 24h
  labels:
    preset-bazel-scratch-dir: "true"
    # preset-bazel-remote-cache-enabled: "true"
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  decorate: true
  decoration_config:
    timeout: 60m
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/krte:v20200430-04773e2-master
      command:
      - wrapper.sh
      - bash
      - -c
      - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
      env:
      # enable IPV6 in bootstrap image
      - name: DOCKER_IN_DOCKER_IPV6_ENABLED
        value: "true"
      # tell kind CI script to use ipv6
      - name: IP_FAMILY
        value: "ipv6"
      - name: FOCUS
        value: "."
      # TODO(bentheelder): reduce the skip list further
      - name: SKIP
        value: \[Slow\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|PodSecurityPolicy|LoadBalancer|load.balancer|In-tree.Volumes.\[Driver:.nfs\]|PersistentVolumes.NFS|Network.should.set.TCP.CLOSE_WAIT.timeout|Simple.pod.should.support.exec.through.an.HTTP.proxy|subPath.should.support.existing|should.provide.basic.identity|\[NodeFeature:PodReadinessGate\]
      - name: PARALLEL
        value: "true"
      - name: BUILD_TYPE
        value: bazel
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        requests:
          # these are both a bit below peak usage during build
          # this is mostly for building kubernetes
          memory: "9000Mi"
          # during the tests more like 3-20m is used
          cpu: 2000m

- name: periodic-kubernetes-bazel-build-master-test
  cluster: k8s-infra-prow-build
  annotations:
    fork-per-release: "true"
    fork-per-release-replacements: "latest-bazel.txt -> latest-bazel-{{.Version}}.txt"
    fork-per-release-periodic-interval: 6h
    testgrid-alert-email: kubernetes-sig-testing-alerts@googlegroups.com, k8s-infra-oncall@google.com
    testgrid-dashboards: sig-release-master-blocking, google-unit
    testgrid-tab-name: bazel-build-master
    description: run bazel build //... -//vendor/...
  interval: 5m
  decorate: true
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
  extra_refs:
  - base_ref: master
    org: kubernetes
    repo: kubernetes
  - base_ref: master
    org: kubernetes
    repo: test-infra
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20200428-06f6e3b-master
      command:
      - bash
      args:
      - -c
      - |
        set -o errexit
        gcloud auth activate-service-account --key-file=/etc/service-account/service-account.json
        # NOTE: --config=ci \
        ../test-infra/scenarios/kubernetes_bazel.py \
            "--build=//... -//vendor/..." \
            --release=//build/release-tars \
            --gcs=gs://kubernetes-release-dev/ci-periodic \
            --version-suffix=-bazel
